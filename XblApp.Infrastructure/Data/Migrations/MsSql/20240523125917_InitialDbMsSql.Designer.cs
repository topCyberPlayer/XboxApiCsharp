// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XblApp.Infrastructure.Data;

#nullable disable

namespace XblApp.Infrastructure.Data.Migrations.MsSql
{
    [DbContext(typeof(MsSqlDbContext))]
    [Migration("20240523125917_InitialDbMsSql")]
    partial class InitialDbMsSql
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("nba")
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("XblApp.Domain.Entities.Game", b =>
                {
                    b.Property<long>("GameId")
                        .HasColumnType("bigint");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalAchievements")
                        .HasColumnType("int");

                    b.Property<int>("TotalGamerscore")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.ToTable("Games", "nba");
                });

            modelBuilder.Entity("XblApp.Domain.Entities.Gamer", b =>
                {
                    b.Property<long>("GamerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gamerscore")
                        .HasColumnType("int");

                    b.Property<string>("Gamertag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GamerId");

                    b.ToTable("Gamers", "nba");
                });

            modelBuilder.Entity("XblApp.Domain.Entities.GamerGame", b =>
                {
                    b.Property<long>("GamerId")
                        .HasColumnType("bigint");

                    b.Property<long>("GameId")
                        .HasColumnType("bigint");

                    b.Property<int>("CurrentAchievements")
                        .HasColumnType("int");

                    b.Property<int>("CurrentGamerscore")
                        .HasColumnType("int");

                    b.HasKey("GamerId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("GamerGame", "nba");
                });

            modelBuilder.Entity("XblApp.Domain.Entities.GamerGame", b =>
                {
                    b.HasOne("XblApp.Domain.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XblApp.Domain.Entities.Gamer", "Gamer")
                        .WithMany("GameLinks")
                        .HasForeignKey("GamerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Gamer");
                });

            modelBuilder.Entity("XblApp.Domain.Entities.Gamer", b =>
                {
                    b.Navigation("GameLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
